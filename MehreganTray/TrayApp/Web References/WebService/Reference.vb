'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
'
Namespace WebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SendSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BaseBL))>  _
    Partial Public Class Send
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendSimpleSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSimpleSMS2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCreditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDelivery2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMultiDeliveryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInboxCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMessagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TrayApp.My.MySettings.Default.TrayApp_ir_webone_sms_Send
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendSimpleSMSCompleted As SendSimpleSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSimpleSMS2Completed As SendSimpleSMS2CompletedEventHandler
        
        '''<remarks/>
        Public Event SendSmsCompleted As SendSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCreditCompleted As GetCreditCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCompleted As GetDeliveryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDelivery2Completed As GetDelivery2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetMultiDeliveryCompleted As GetMultiDeliveryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInboxCountCompleted As GetInboxCountCompletedEventHandler
        
        '''<remarks/>
        Public Event getMessagesCompleted As getMessagesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSimpleSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSimpleSMS(ByVal username As String, ByVal password As String, ByVal [to]() As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean) As String()
            Dim results() As Object = Me.Invoke("SendSimpleSMS", New Object() {username, password, [to], from, text, isflash})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSimpleSMSAsync(ByVal username As String, ByVal password As String, ByVal [to]() As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean)
            Me.SendSimpleSMSAsync(username, password, [to], from, text, isflash, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSimpleSMSAsync(ByVal username As String, ByVal password As String, ByVal [to]() As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean, ByVal userState As Object)
            If (Me.SendSimpleSMSOperationCompleted Is Nothing) Then
                Me.SendSimpleSMSOperationCompleted = AddressOf Me.OnSendSimpleSMSOperationCompleted
            End If
            Me.InvokeAsync("SendSimpleSMS", New Object() {username, password, [to], from, text, isflash}, Me.SendSimpleSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSimpleSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSimpleSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSimpleSMSCompleted(Me, New SendSimpleSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSimpleSMS2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSimpleSMS2(ByVal username As String, ByVal password As String, ByVal [to] As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean) As String
            Dim results() As Object = Me.Invoke("SendSimpleSMS2", New Object() {username, password, [to], from, text, isflash})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSimpleSMS2Async(ByVal username As String, ByVal password As String, ByVal [to] As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean)
            Me.SendSimpleSMS2Async(username, password, [to], from, text, isflash, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSimpleSMS2Async(ByVal username As String, ByVal password As String, ByVal [to] As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean, ByVal userState As Object)
            If (Me.SendSimpleSMS2OperationCompleted Is Nothing) Then
                Me.SendSimpleSMS2OperationCompleted = AddressOf Me.OnSendSimpleSMS2OperationCompleted
            End If
            Me.InvokeAsync("SendSimpleSMS2", New Object() {username, password, [to], from, text, isflash}, Me.SendSimpleSMS2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSimpleSMS2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSimpleSMS2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSimpleSMS2Completed(Me, New SendSimpleSMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSms(ByVal username As String, ByVal password As String, ByVal [to]() As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean, ByVal udh As String, ByRef recId() As Long, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef status() As Byte) As Integer
            Dim results() As Object = Me.Invoke("SendSms", New Object() {username, password, [to], from, text, isflash, udh, recId, status})
            recId = CType(results(1),Long())
            status = CType(results(2),Byte())
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSmsAsync(ByVal username As String, ByVal password As String, ByVal [to]() As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean, ByVal udh As String, ByVal recId() As Long, ByVal status() As Byte)
            Me.SendSmsAsync(username, password, [to], from, text, isflash, udh, recId, status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSmsAsync(ByVal username As String, ByVal password As String, ByVal [to]() As String, ByVal from As String, ByVal text As String, ByVal isflash As Boolean, ByVal udh As String, ByVal recId() As Long, ByVal status() As Byte, ByVal userState As Object)
            If (Me.SendSmsOperationCompleted Is Nothing) Then
                Me.SendSmsOperationCompleted = AddressOf Me.OnSendSmsOperationCompleted
            End If
            Me.InvokeAsync("SendSms", New Object() {username, password, [to], from, text, isflash, udh, recId, status}, Me.SendSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSmsCompleted(Me, New SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCredit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCredit(ByVal username As String, ByVal password As String) As Double
            Dim results() As Object = Me.Invoke("GetCredit", New Object() {username, password})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCreditAsync(ByVal username As String, ByVal password As String)
            Me.GetCreditAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCreditAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.GetCreditOperationCompleted Is Nothing) Then
                Me.GetCreditOperationCompleted = AddressOf Me.OnGetCreditOperationCompleted
            End If
            Me.InvokeAsync("GetCredit", New Object() {username, password}, Me.GetCreditOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCreditOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCreditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCreditCompleted(Me, New GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDelivery(ByVal recId As Long) As Integer
            Dim results() As Object = Me.Invoke("GetDelivery", New Object() {recId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryAsync(ByVal recId As Long)
            Me.GetDeliveryAsync(recId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryAsync(ByVal recId As Long, ByVal userState As Object)
            If (Me.GetDeliveryOperationCompleted Is Nothing) Then
                Me.GetDeliveryOperationCompleted = AddressOf Me.OnGetDeliveryOperationCompleted
            End If
            Me.InvokeAsync("GetDelivery", New Object() {recId}, Me.GetDeliveryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCompleted(Me, New GetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDelivery2(ByVal recId As String) As Integer
            Dim results() As Object = Me.Invoke("GetDelivery2", New Object() {recId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDelivery2Async(ByVal recId As String)
            Me.GetDelivery2Async(recId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDelivery2Async(ByVal recId As String, ByVal userState As Object)
            If (Me.GetDelivery2OperationCompleted Is Nothing) Then
                Me.GetDelivery2OperationCompleted = AddressOf Me.OnGetDelivery2OperationCompleted
            End If
            Me.InvokeAsync("GetDelivery2", New Object() {recId}, Me.GetDelivery2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDelivery2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDelivery2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDelivery2Completed(Me, New GetDelivery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMultiDelivery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMultiDelivery(ByVal recId As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetMultiDelivery", New Object() {recId})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMultiDeliveryAsync(ByVal recId As String)
            Me.GetMultiDeliveryAsync(recId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMultiDeliveryAsync(ByVal recId As String, ByVal userState As Object)
            If (Me.GetMultiDeliveryOperationCompleted Is Nothing) Then
                Me.GetMultiDeliveryOperationCompleted = AddressOf Me.OnGetMultiDeliveryOperationCompleted
            End If
            Me.InvokeAsync("GetMultiDelivery", New Object() {recId}, Me.GetMultiDeliveryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMultiDeliveryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMultiDeliveryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMultiDeliveryCompleted(Me, New GetMultiDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInboxCount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInboxCount(ByVal username As String, ByVal password As String, ByVal isRead As Boolean) As Integer
            Dim results() As Object = Me.Invoke("GetInboxCount", New Object() {username, password, isRead})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInboxCountAsync(ByVal username As String, ByVal password As String, ByVal isRead As Boolean)
            Me.GetInboxCountAsync(username, password, isRead, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInboxCountAsync(ByVal username As String, ByVal password As String, ByVal isRead As Boolean, ByVal userState As Object)
            If (Me.GetInboxCountOperationCompleted Is Nothing) Then
                Me.GetInboxCountOperationCompleted = AddressOf Me.OnGetInboxCountOperationCompleted
            End If
            Me.InvokeAsync("GetInboxCount", New Object() {username, password, isRead}, Me.GetInboxCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInboxCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInboxCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInboxCountCompleted(Me, New GetInboxCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMessages", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMessages(ByVal username As String, ByVal password As String, ByVal location As Integer, ByVal from As String, ByVal index As Integer, ByVal count As Integer) As MessagesBL()
            Dim results() As Object = Me.Invoke("getMessages", New Object() {username, password, location, from, index, count})
            Return CType(results(0),MessagesBL())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMessagesAsync(ByVal username As String, ByVal password As String, ByVal location As Integer, ByVal from As String, ByVal index As Integer, ByVal count As Integer)
            Me.getMessagesAsync(username, password, location, from, index, count, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMessagesAsync(ByVal username As String, ByVal password As String, ByVal location As Integer, ByVal from As String, ByVal index As Integer, ByVal count As Integer, ByVal userState As Object)
            If (Me.getMessagesOperationCompleted Is Nothing) Then
                Me.getMessagesOperationCompleted = AddressOf Me.OngetMessagesOperationCompleted
            End If
            Me.InvokeAsync("getMessages", New Object() {username, password, location, from, index, count}, Me.getMessagesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMessagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMessagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMessagesCompleted(Me, New getMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MessagesBL
        Inherits BaseBL
        
        Private msgIDField As Long
        
        Private userIDField As Integer
        
        Private linkIDField As Integer
        
        Private numberIDField As Integer
        
        Private tariffField As Double
        
        Private msgTypeField As Byte
        
        Private bodyField As String
        
        Private udhField As String
        
        Private sendDateField As Date
        
        Private senderField As String
        
        Private receiverField As String
        
        Private firstLocationField As Integer
        
        Private currentLocationField As Integer
        
        Private partsField As Integer
        
        Private isFlashField As Boolean
        
        Private isReadField As Boolean
        
        Private isUnicodeField As Boolean
        
        Private creditField As Double
        
        Private moduleField As Integer
        
        Private recCountField As Integer
        
        Private recFailedField As Integer
        
        Private recSuccessField As Integer
        
        Private isMoneyBackField As Boolean
        
        '''<remarks/>
        Public Property MsgID() As Long
            Get
                Return Me.msgIDField
            End Get
            Set
                Me.msgIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LinkID() As Integer
            Get
                Return Me.linkIDField
            End Get
            Set
                Me.linkIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumberID() As Integer
            Get
                Return Me.numberIDField
            End Get
            Set
                Me.numberIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tariff() As Double
            Get
                Return Me.tariffField
            End Get
            Set
                Me.tariffField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MsgType() As Byte
            Get
                Return Me.msgTypeField
            End Get
            Set
                Me.msgTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Body() As String
            Get
                Return Me.bodyField
            End Get
            Set
                Me.bodyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Udh() As String
            Get
                Return Me.udhField
            End Get
            Set
                Me.udhField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SendDate() As Date
            Get
                Return Me.sendDateField
            End Get
            Set
                Me.sendDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sender() As String
            Get
                Return Me.senderField
            End Get
            Set
                Me.senderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Receiver() As String
            Get
                Return Me.receiverField
            End Get
            Set
                Me.receiverField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstLocation() As Integer
            Get
                Return Me.firstLocationField
            End Get
            Set
                Me.firstLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentLocation() As Integer
            Get
                Return Me.currentLocationField
            End Get
            Set
                Me.currentLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Parts() As Integer
            Get
                Return Me.partsField
            End Get
            Set
                Me.partsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsFlash() As Boolean
            Get
                Return Me.isFlashField
            End Get
            Set
                Me.isFlashField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsRead() As Boolean
            Get
                Return Me.isReadField
            End Get
            Set
                Me.isReadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsUnicode() As Boolean
            Get
                Return Me.isUnicodeField
            End Get
            Set
                Me.isUnicodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Credit() As Double
            Get
                Return Me.creditField
            End Get
            Set
                Me.creditField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Module]() As Integer
            Get
                Return Me.moduleField
            End Get
            Set
                Me.moduleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecCount() As Integer
            Get
                Return Me.recCountField
            End Get
            Set
                Me.recCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecFailed() As Integer
            Get
                Return Me.recFailedField
            End Get
            Set
                Me.recFailedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecSuccess() As Integer
            Get
                Return Me.recSuccessField
            End Get
            Set
                Me.recSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsMoneyBack() As Boolean
            Get
                Return Me.isMoneyBackField
            End Get
            Set
                Me.isMoneyBackField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(MessagesBL)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BaseBL
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSimpleSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendSimpleSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSimpleSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSimpleSMS2CompletedEventHandler(ByVal sender As Object, ByVal e As SendSimpleSMS2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSimpleSMS2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SendSmsCompletedEventHandler(ByVal sender As Object, ByVal e As SendSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property recId() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property status() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetCreditCompletedEventHandler(ByVal sender As Object, ByVal e As GetCreditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCreditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDeliveryCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetDelivery2CompletedEventHandler(ByVal sender As Object, ByVal e As GetDelivery2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDelivery2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetMultiDeliveryCompletedEventHandler(ByVal sender As Object, ByVal e As GetMultiDeliveryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMultiDeliveryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetInboxCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetInboxCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInboxCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub getMessagesCompletedEventHandler(ByVal sender As Object, ByVal e As getMessagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMessagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MessagesBL()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MessagesBL())
            End Get
        End Property
    End Class
End Namespace
